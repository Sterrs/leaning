λ (m n k : mynat), mynat.rec (eq.rec true.intro (eq.rec (eq.refl (succ zero = succ zero)) (eq.rec (eq.refl (succ zero = succ zero)) (propext {mp := λ (hl : succ zero = succ zero), true.intro, mpr := λ (hr : true), eq.refl (succ zero)})))) (λ (k_n : mynat) (k_ih : pow (mul m n) k_n = mul (pow m k_n) (pow n k_n)), eq.rec (eq.rec (eq.rec (eq.refl (mul m (mul (pow m k_n) (mul n (pow n k_n))))) (eq.rec (eq.refl (mul m (mul (mul (pow m k_n) n) (pow n k_n)) = mul m (mul (pow m k_n) (mul n (pow n k_n))))) (eq.rec (eq.refl (mul m (mul (mul (pow m k_n) n) (pow n k_n)) = mul m (mul (pow m k_n) (mul n (pow n k_n))))) (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (zero = zero)) (eq.rec (eq.refl (zero = zero)) (propext {mp := λ (hl : zero = zero), true.intro, mpr := λ (hr : true), eq.refl zero})))) (λ (k_n_1 : mynat) (k_ih : mul (mul (pow m k_n) n) k_n_1 = mul (pow m k_n) (mul n k_n_1)), eq.rec true.intro (eq.rec (eq.refl (add (mul (pow m k_n) n) (mul (mul (pow m k_n) n) k_n_1) = mul (pow m k_n) (add n (mul n k_n_1)))) (eq.rec (eq.rec (eq.rec (eq.refl (add (mul (pow m k_n) n) (mul (mul (pow m k_n) n) k_n_1) = mul (pow m k_n) (add n (mul n k_n_1)))) (eq.rec (eq.refl (mul (pow m k_n) (add n (mul n k_n_1)))) (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (mul zero (add n (mul n k_n_1)) = add (mul zero n) (mul zero (mul n k_n_1)))) (eq.rec (eq.rec (eq.rec (eq.refl (mul zero (add n (mul n k_n_1)) = add (mul zero n) (mul zero (mul n k_n_1)))) (eq.rec (eq.rec (eq.refl (add (mul zero n) (mul zero (mul n k_n_1)))) (eq.rec (eq.refl (mul zero (mul n k_n_1))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : mul zero m_n = zero), eq.rec m_ih (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (eq (add zero (mul zero m_n)))) (eq.rec (eq.refl (add zero (mul zero m_n))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul zero m_n))))))) (mul n k_n_1)))) (eq.rec (eq.refl (add (mul zero n))) (eq.rec (eq.refl (mul zero n)) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : mul zero m_n = zero), eq.rec m_ih (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (eq (add zero (mul zero m_n)))) (eq.rec (eq.refl (add zero (mul zero m_n))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul zero m_n))))))) n))))) (eq.rec (eq.refl (eq (mul zero (add n (mul n k_n_1))))) (eq.rec (eq.refl (mul zero (add n (mul n k_n_1)))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : mul zero m_n = zero), eq.rec m_ih (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (eq (add zero (mul zero m_n)))) (eq.rec (eq.refl (add zero (mul zero m_n))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul zero m_n))))))) (add n (mul n k_n_1)))))) (propext {mp := λ (hl : zero = zero), true.intro, mpr := λ (hr : true), eq.refl zero})))) (λ (m_n : mynat) (m_ih : mul m_n (add n (mul n k_n_1)) = add (mul m_n n) (mul m_n (mul n k_n_1))), eq.rec (eq.rec (eq.refl (add n (add (mul m_n n) (add (mul n k_n_1) (mul m_n (mul n k_n_1)))))) (eq.rec (eq.refl (add n (add (mul n k_n_1) (add (mul m_n n) (mul m_n (mul n k_n_1)))) = add n (add (mul m_n n) (add (mul n k_n_1) (mul m_n (mul n k_n_1)))))) (eq.rec (eq.refl (add n (add (mul n k_n_1) (add (mul m_n n) (mul m_n (mul n k_n_1)))) = add n (add (mul m_n n) (add (mul n k_n_1) (mul m_n (mul n k_n_1)))))) (eq.rec (eq.refl (eq (add n (add (mul n k_n_1) (add (mul m_n n) (mul m_n (mul n k_n_1))))))) (eq.rec (eq.refl (add n (add (mul n k_n_1) (add (mul m_n n) (mul m_n (mul n k_n_1)))))) (eq.rec (eq.rec (eq.refl (add (mul n k_n_1) (add (mul m_n n) (mul m_n (mul n k_n_1))))) (eq.rec (eq.refl (add (add (mul n k_n_1) (mul m_n n)) (mul m_n (mul n k_n_1)))) (mynat.rec (eq.refl (add (mul n k_n_1) (mul m_n n))) (λ (k_n : mynat) (k_ih : add (add (mul n k_n_1) (mul m_n n)) k_n = add (mul n k_n_1) (add (mul m_n n) k_n)), eq.rec k_ih (eq.rec (eq.refl (succ (add (add (mul n k_n_1) (mul m_n n)) k_n) = succ (add (mul n k_n_1) (add (mul m_n n) k_n)))) (eq.rec (eq.refl (succ (add (add (mul n k_n_1) (mul m_n n)) k_n) = succ (add (mul n k_n_1) (add (mul m_n n) k_n)))) (propext {mp := λ (h : succ (add (add (mul n k_n_1) (mul m_n n)) k_n) = succ (add (mul n k_n_1) (add (mul m_n n) k_n))), eq.rec (λ (h11 : succ (add (add (mul n k_n_1) (mul m_n n)) k_n) = succ (add (add (mul n k_n_1) (mul m_n n)) k_n)) (a : add (add (mul n k_n_1) (mul m_n n)) k_n = add (add (mul n k_n_1) (mul m_n n)) k_n → add (add (mul n k_n_1) (mul m_n n)) k_n = add (mul n k_n_1) (add (mul m_n n) k_n)), a (eq.refl (add (add (mul n k_n_1) (mul m_n n)) k_n))) h h (λ (n_eq : add (add (mul n k_n_1) (mul m_n n)) k_n = add (mul n k_n_1) (add (mul m_n n) k_n)), n_eq), mpr := λ (a : add (add (mul n k_n_1) (mul m_n n)) k_n = add (mul n k_n_1) (add (mul m_n n) k_n)), eq.rec (eq.refl (succ (add (add (mul n k_n_1) (mul m_n n)) k_n))) a})))) (mul m_n (mul n k_n_1))))) (eq.rec (eq.rec (eq.refl (add (add (mul n k_n_1) (mul m_n n)) (mul m_n (mul n k_n_1)))) (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (mul n k_n_1 = add zero (mul n k_n_1))) (eq.rec (eq.rec (eq.refl (mul n k_n_1 = add zero (mul n k_n_1))) (eq.rec (eq.refl (add zero (mul n k_n_1))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul n k_n_1)))) (propext {mp := λ (hl : mul n k_n_1 = mul n k_n_1), true.intro, mpr := λ (hr : true), eq.refl (mul n k_n_1)})))) (λ (n_n : mynat) (n_ih : add (mul n k_n_1) n_n = add n_n (mul n k_n_1)), eq.rec n_ih (eq.rec (eq.refl (succ (add (mul n k_n_1) n_n) = add (succ n_n) (mul n k_n_1))) (eq.rec (eq.rec (eq.refl (succ (add (mul n k_n_1) n_n) = add (succ n_n) (mul n k_n_1))) (mynat.rec (eq.refl (succ n_n)) (λ (n_n_1 : mynat) (n_ih : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n) n_n_1) = succ (succ (add n_n n_n_1)))) (eq.rec (eq.refl (succ (add (succ n_n) n_n_1) = succ (succ (add n_n n_n_1)))) (propext {mp := λ (h : succ (add (succ n_n) n_n_1) = succ (succ (add n_n n_n_1))), eq.rec (λ (h11 : succ (add (succ n_n) n_n_1) = succ (add (succ n_n) n_n_1)) (a : add (succ n_n) n_n_1 = add (succ n_n) n_n_1 → add (succ n_n) n_n_1 = succ (add n_n n_n_1)), a (eq.refl (add (succ n_n) n_n_1))) h h (λ (n_eq : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), n_eq), mpr := λ (a : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), eq.rec (eq.refl (succ (add (succ n_n) n_n_1))) a})))) (mul n k_n_1))) (propext {mp := λ (h : succ (add (mul n k_n_1) n_n) = succ (add n_n (mul n k_n_1))), eq.rec (λ (h11 : succ (add (mul n k_n_1) n_n) = succ (add (mul n k_n_1) n_n)) (a : add (mul n k_n_1) n_n = add (mul n k_n_1) n_n → add (mul n k_n_1) n_n = add n_n (mul n k_n_1)), a (eq.refl (add (mul n k_n_1) n_n))) h h (λ (n_eq : add (mul n k_n_1) n_n = add n_n (mul n k_n_1)), n_eq), mpr := λ (a : add (mul n k_n_1) n_n = add n_n (mul n k_n_1)), eq.rec (eq.refl (succ (add (mul n k_n_1) n_n))) a})))) (mul m_n n))) (eq.rec (eq.refl (add (add (mul m_n n) (mul n k_n_1)) (mul m_n (mul n k_n_1)))) (mynat.rec (eq.refl (add (mul m_n n) (mul n k_n_1))) (λ (k_n : mynat) (k_ih : add (add (mul m_n n) (mul n k_n_1)) k_n = add (mul m_n n) (add (mul n k_n_1) k_n)), eq.rec k_ih (eq.rec (eq.refl (succ (add (add (mul m_n n) (mul n k_n_1)) k_n) = succ (add (mul m_n n) (add (mul n k_n_1) k_n)))) (eq.rec (eq.refl (succ (add (add (mul m_n n) (mul n k_n_1)) k_n) = succ (add (mul m_n n) (add (mul n k_n_1) k_n)))) (propext {mp := λ (h : succ (add (add (mul m_n n) (mul n k_n_1)) k_n) = succ (add (mul m_n n) (add (mul n k_n_1) k_n))), eq.rec (λ (h11 : succ (add (add (mul m_n n) (mul n k_n_1)) k_n) = succ (add (add (mul m_n n) (mul n k_n_1)) k_n)) (a : add (add (mul m_n n) (mul n k_n_1)) k_n = add (add (mul m_n n) (mul n k_n_1)) k_n → add (add (mul m_n n) (mul n k_n_1)) k_n = add (mul m_n n) (add (mul n k_n_1) k_n)), a (eq.refl (add (add (mul m_n n) (mul n k_n_1)) k_n))) h h (λ (n_eq : add (add (mul m_n n) (mul n k_n_1)) k_n = add (mul m_n n) (add (mul n k_n_1) k_n)), n_eq), mpr := λ (a : add (add (mul m_n n) (mul n k_n_1)) k_n = add (mul m_n n) (add (mul n k_n_1) k_n)), eq.rec (eq.refl (succ (add (add (mul m_n n) (mul n k_n_1)) k_n))) a})))) (mul m_n (mul n k_n_1))))))))))) (eq.rec (eq.refl (mul (succ m_n) (add n (mul n k_n_1)) = add (mul (succ m_n) n) (mul (succ m_n) (mul n k_n_1)))) (eq.rec (eq.rec (eq.refl (mul (succ m_n) (add n (mul n k_n_1)) = add (mul (succ m_n) n) (mul (succ m_n) (mul n k_n_1)))) (eq.rec (eq.rec (eq.rec (eq.refl (add (mul (succ m_n) n) (mul (succ m_n) (mul n k_n_1)))) (eq.rec (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (zero = zero)) (eq.rec (eq.refl (zero = zero)) (propext {mp := λ (hl : zero = zero), true.intro, mpr := λ (hr : true), eq.refl zero})))) (λ (n_n : mynat) (n_ih : mul (succ m_n) n_n = add (mul m_n n_n) n_n), eq.rec (eq.rec (eq.rec (eq.rec (eq.refl (add n_n (add m_n (mul m_n n_n)))) (eq.rec (eq.refl (add (add n_n m_n) (mul m_n n_n) = add n_n (add m_n (mul m_n n_n)))) (eq.rec (eq.refl (add (add n_n m_n) (mul m_n n_n) = add n_n (add m_n (mul m_n n_n)))) (mynat.rec (eq.refl (add n_n m_n)) (λ (k_n : mynat) (k_ih : add (add n_n m_n) k_n = add n_n (add m_n k_n)), eq.rec k_ih (eq.rec (eq.refl (succ (add (add n_n m_n) k_n) = succ (add n_n (add m_n k_n)))) (eq.rec (eq.refl (succ (add (add n_n m_n) k_n) = succ (add n_n (add m_n k_n)))) (propext {mp := λ (h : succ (add (add n_n m_n) k_n) = succ (add n_n (add m_n k_n))), eq.rec (λ (h11 : … = …) (a : … → …), a …) h h (λ (n_eq : add (… m_n) k_n = add n_n (add m_n k_n)), n_eq), mpr := λ (a : add (add n_n m_n) k_n = add n_n (add m_n k_n)), eq.rec (eq.refl (succ (add … k_n))) a})))) (mul m_n n_n))))) (eq.rec (eq.refl (add (add m_n n_n) (mul m_n n_n) = add n_n (add m_n (mul m_n n_n)))) (eq.rec (eq.refl (add (add m_n n_n) (mul m_n n_n) = add n_n (add m_n (mul m_n n_n)))) (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (m_n = add zero m_n)) (eq.rec (eq.rec (eq.refl (m_n = add zero m_n)) (eq.rec (eq.refl (add zero m_n)) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (… = …)) (eq.rec (eq.refl …) (propext {mp := …, mpr := …})))) m_n))) (propext {mp := λ (hl : m_n = m_n), true.intro, mpr := λ (hr : true), eq.refl m_n})))) (λ (n_n : mynat) (n_ih : add m_n n_n = add n_n m_n), eq.rec n_ih (eq.rec (eq.refl (succ (add m_n n_n) = add (succ n_n) m_n)) (eq.rec (eq.rec (eq.refl (succ (add m_n n_n) = add (succ n_n) m_n)) (mynat.rec (eq.refl (succ n_n)) (λ (n_n_1 : mynat) (n_ih : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), eq.rec n_ih (eq.rec (eq.refl (succ … = succ …)) (eq.rec (eq.refl (… = …)) (propext {mp := λ (h : …), …, mpr := λ (a : …), …})))) m_n)) (propext {mp := λ (h : succ (add m_n n_n) = succ (add n_n m_n)), eq.rec (λ (h11 : succ (… n_n) = succ (… n_n)) (a : … n_n = … n_n → … n_n = … m_n), a (eq.refl (… n_n))) h h (λ (n_eq : add m_n n_n = add n_n m_n), n_eq), mpr := λ (a : add m_n n_n = add n_n m_n), eq.rec (eq.refl (succ (add m_n n_n))) a})))) n_n)))) (eq.rec (eq.refl (add m_n (add n_n (mul m_n n_n)) = add n_n (add m_n (mul m_n n_n)))) (eq.rec (eq.refl (add m_n (add n_n (mul m_n n_n)) = add n_n (add m_n (mul m_n n_n)))) (eq.rec (eq.refl (add (add m_n n_n) (mul m_n n_n))) (mynat.rec (eq.refl (add m_n n_n)) (λ (k_n : mynat) (k_ih : add (add m_n n_n) k_n = add m_n (add n_n k_n)), eq.rec k_ih (eq.rec (eq.refl (succ (add (add m_n n_n) k_n) = succ (add m_n (add n_n k_n)))) (eq.rec (eq.refl (succ (add (add m_n n_n) k_n) = succ (add m_n (add n_n k_n)))) (propext {mp := λ (h : succ (add (add m_n n_n) k_n) = succ (add m_n (add n_n k_n))), eq.rec (λ (h11 : succ (add … k_n) = succ (add … k_n)) (a : add … k_n = add … k_n → add … k_n = add m_n (… k_n)), a (eq.refl (add … k_n))) h h (λ (n_eq : add (add m_n n_n) k_n = add m_n (add n_n k_n)), n_eq), mpr := λ (a : add (add m_n n_n) k_n = add m_n (add n_n k_n)), eq.rec (eq.refl (succ (add (add m_n n_n) k_n))) a})))) (mul m_n n_n)))))) (eq.rec (eq.refl (add (succ m_n) (mul (succ m_n) n_n) = succ (add (add m_n (mul m_n n_n)) n_n))) (eq.rec (eq.rec (eq.rec (eq.refl (add (succ m_n) (mul (succ m_n) n_n) = succ (add (add m_n (mul m_n n_n)) n_n))) (eq.rec (eq.rec (eq.refl (succ (add (add m_n (mul m_n n_n)) n_n))) (eq.rec (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (add m_n (mul m_n n_n) = add zero (add m_n (mul m_n n_n)))) (eq.rec (eq.rec (eq.refl (… … = … …)) (eq.rec (eq.refl (… …)) (mynat.rec … (λ (m_n : mynat) (m_ih : …), …) (add m_n (… n_n))))) (propext {mp := λ (hl : add m_n (… n_n) = add m_n (… n_n)), true.intro, mpr := λ (hr : true), eq.refl (add m_n (… n_n))})))) (λ (n_n_1 : mynat) (n_ih : add (add m_n (mul m_n n_n)) n_n_1 = add n_n_1 (add m_n (mul m_n n_n))), eq.rec n_ih (eq.rec (eq.refl (succ (add (… …) n_n_1) = add (succ n_n_1) (add m_n (mul m_n n_n)))) (eq.rec (eq.rec (eq.refl (succ … = … …)) (mynat.rec (eq.refl …) (λ (n_n : mynat) (n_ih : … = …), … …) (add m_n (mul m_n n_n)))) (propext {mp := λ (h : succ (… n_n_1) = succ (… …)), … h h (λ (n_eq : … = …), n_eq), mpr := λ (a : add … n_n_1 = add n_n_1 (… …)), eq.rec (eq.refl …) a})))) n_n) (eq.rec (eq.refl (succ (add (add m_n (mul m_n n_n)) n_n) = add (succ n_n) (add m_n (mul m_n n_n)))) (eq.rec (eq.rec (eq.refl (succ (add (add m_n (mul m_n n_n)) n_n) = add (succ n_n) (add m_n (mul m_n n_n)))) (mynat.rec (eq.refl (succ n_n)) (λ (n_n_1 : mynat) (n_ih : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), eq.rec n_ih (eq.rec (eq.refl (succ … = succ …)) (eq.rec (eq.refl (… = …)) (propext {mp := λ (h : …), …, mpr := λ (a : …), …})))) (add m_n (mul m_n n_n)))) (propext {mp := λ (h : succ (add (add m_n (mul m_n n_n)) n_n) = succ (add n_n (add m_n (mul m_n n_n)))), eq.rec (λ (h11 : succ (… n_n) = succ (… n_n)) (a : … n_n = … n_n → … n_n = … …), a (eq.refl (… n_n))) h h (λ (n_eq : add (add m_n (mul m_n n_n)) n_n = add n_n (add m_n (mul m_n n_n))), n_eq), mpr := λ (a : … = add n_n (… …)), …}))))) …)) …) …))) …) …)) …) …)) …))) …))) …) …))) …)))) …) …) k
