λ (m n : mynat), mynat.rec (eq.rec true.intro (eq.rec (eq.refl (zero = mul zero m)) (eq.rec (eq.rec (eq.refl (zero = mul zero m)) (eq.rec (eq.refl (mul zero m)) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : mul zero m_n = zero), eq.rec m_ih (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (add zero (mul zero m_n) = zero)) (eq.rec (eq.refl (eq (add zero (mul zero m_n)))) (eq.rec (eq.refl (add zero (mul zero m_n))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul zero m_n))))))) m))) (propext {mp := λ (hl : zero = zero), true.intro, mpr := λ (hr : true), eq.refl zero})))) (λ (n_n : mynat) (n_ih : mul m n_n = mul n_n m), eq.rec true.intro (eq.rec (eq.refl (add m (mul m n_n) = mul (succ n_n) m)) (eq.rec (eq.rec (eq.rec (eq.refl (add m (mul m n_n) = mul (succ n_n) m)) (eq.rec (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (zero = zero)) (eq.rec (eq.refl (zero = zero)) (propext {mp := λ (hl : zero = zero), true.intro, mpr := λ (hr : true), eq.refl zero})))) (λ (n_n_1 : mynat) (n_ih : mul (succ n_n) n_n_1 = add (mul n_n n_n_1) n_n_1), eq.rec (eq.rec (eq.rec (eq.rec (eq.refl (add n_n_1 (add n_n (mul n_n n_n_1)))) (eq.rec (eq.refl (add (add n_n_1 n_n) (mul n_n n_n_1) = add n_n_1 (add n_n (mul n_n n_n_1)))) (eq.rec (eq.refl (add (add n_n_1 n_n) (mul n_n n_n_1) = add n_n_1 (add n_n (mul n_n n_n_1)))) (mynat.rec (eq.refl (add n_n_1 n_n)) (λ (k_n : mynat) (k_ih : add (add n_n_1 n_n) k_n = add n_n_1 (add n_n k_n)), eq.rec k_ih (eq.rec (eq.refl (succ (add (add n_n_1 n_n) k_n) = succ (add n_n_1 (add n_n k_n)))) (eq.rec (eq.refl (succ (add (add n_n_1 n_n) k_n) = succ (add n_n_1 (add n_n k_n)))) (propext {mp := λ (h : succ (add (add n_n_1 n_n) k_n) = succ (add n_n_1 (add n_n k_n))), eq.rec (λ (h11 : succ (add (add n_n_1 n_n) k_n) = succ (add (add n_n_1 n_n) k_n)) (a : add (add n_n_1 n_n) k_n = add (add n_n_1 n_n) k_n → add (add n_n_1 n_n) k_n = add n_n_1 (add n_n k_n)), a (eq.refl (add (add n_n_1 n_n) k_n))) h h (λ (n_eq : add (add n_n_1 n_n) k_n = add n_n_1 (add n_n k_n)), n_eq), mpr := λ (a : add (add n_n_1 n_n) k_n = add n_n_1 (add n_n k_n)), eq.rec (eq.refl (succ (add (add n_n_1 n_n) k_n))) a})))) (mul n_n n_n_1))))) (eq.rec (eq.refl (add (add n_n n_n_1) (mul n_n n_n_1) = add n_n_1 (add n_n (mul n_n n_n_1)))) (eq.rec (eq.refl (add (add n_n n_n_1) (mul n_n n_n_1) = add n_n_1 (add n_n (mul n_n n_n_1)))) (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (n_n = add zero n_n)) (eq.rec (eq.rec (eq.refl (n_n = add zero n_n)) (eq.rec (eq.refl (add zero n_n)) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) n_n))) (propext {mp := λ (hl : n_n = n_n), true.intro, mpr := λ (hr : true), eq.refl n_n})))) (λ (n_n_1 : mynat) (n_ih : add n_n n_n_1 = add n_n_1 n_n), eq.rec n_ih (eq.rec (eq.refl (succ (add n_n n_n_1) = add (succ n_n_1) n_n)) (eq.rec (eq.rec (eq.refl (succ (add n_n n_n_1) = add (succ n_n_1) n_n)) (mynat.rec (eq.refl (succ n_n_1)) (λ (n_n : mynat) (n_ih : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n)))) (eq.rec (eq.refl (succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n)))) (propext {mp := λ (h : succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n))), eq.rec (λ (h11 : succ (add (succ n_n_1) n_n) = succ (add (succ n_n_1) n_n)) (a : add (succ n_n_1) n_n = add (succ n_n_1) n_n → add (succ n_n_1) n_n = succ (add n_n_1 n_n)), a (eq.refl (add (succ n_n_1) n_n))) h h (λ (n_eq : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), n_eq), mpr := λ (a : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), eq.rec (eq.refl (succ (add (succ n_n_1) n_n))) a})))) n_n)) (propext {mp := λ (h : succ (add n_n n_n_1) = succ (add n_n_1 n_n)), eq.rec (λ (h11 : succ (add n_n n_n_1) = succ (add n_n n_n_1)) (a : add n_n n_n_1 = add n_n n_n_1 → add n_n n_n_1 = add n_n_1 n_n), a (eq.refl (add n_n n_n_1))) h h (λ (n_eq : add n_n n_n_1 = add n_n_1 n_n), n_eq), mpr := λ (a : add n_n n_n_1 = add n_n_1 n_n), eq.rec (eq.refl (succ (add n_n n_n_1))) a})))) n_n_1)))) (eq.rec (eq.refl (add n_n (add n_n_1 (mul n_n n_n_1)) = add n_n_1 (add n_n (mul n_n n_n_1)))) (eq.rec (eq.refl (add n_n (add n_n_1 (mul n_n n_n_1)) = add n_n_1 (add n_n (mul n_n n_n_1)))) (eq.rec (eq.refl (add (add n_n n_n_1) (mul n_n n_n_1))) (mynat.rec (eq.refl (add n_n n_n_1)) (λ (k_n : mynat) (k_ih : add (add n_n n_n_1) k_n = add n_n (add n_n_1 k_n)), eq.rec k_ih (eq.rec (eq.refl (succ (add (add n_n n_n_1) k_n) = succ (add n_n (add n_n_1 k_n)))) (eq.rec (eq.refl (succ (add (add n_n n_n_1) k_n) = succ (add n_n (add n_n_1 k_n)))) (propext {mp := λ (h : succ (add (add n_n n_n_1) k_n) = succ (add n_n (add n_n_1 k_n))), eq.rec (λ (h11 : succ (add (add n_n n_n_1) k_n) = succ (add (add n_n n_n_1) k_n)) (a : add (add n_n n_n_1) k_n = add (add n_n n_n_1) k_n → add (add n_n n_n_1) k_n = add n_n (add n_n_1 k_n)), a (eq.refl (add (add n_n n_n_1) k_n))) h h (λ (n_eq : add (add n_n n_n_1) k_n = add n_n (add n_n_1 k_n)), n_eq), mpr := λ (a : add (add n_n n_n_1) k_n = add n_n (add n_n_1 k_n)), eq.rec (eq.refl (succ (add (add n_n n_n_1) k_n))) a})))) (mul n_n n_n_1)))))) (eq.rec (eq.refl (add (succ n_n) (mul (succ n_n) n_n_1) = succ (add (add n_n (mul n_n n_n_1)) n_n_1))) (eq.rec (eq.rec (eq.rec (eq.refl (add (succ n_n) (mul (succ n_n) n_n_1) = succ (add (add n_n (mul n_n n_n_1)) n_n_1))) (eq.rec (eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_1))) (eq.rec (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (add n_n (mul n_n n_n_1) = add zero (add n_n (mul n_n n_n_1)))) (eq.rec (eq.rec (eq.refl (add n_n (mul n_n n_n_1) = add zero (add n_n (mul n_n n_n_1)))) (eq.rec (eq.refl (add zero (add n_n (mul n_n n_n_1)))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (add n_n (mul n_n n_n_1))))) (propext {mp := λ (hl : add n_n (mul n_n n_n_1) = add n_n (mul n_n n_n_1)), true.intro, mpr := λ (hr : true), eq.refl (add n_n (mul n_n n_n_1))})))) (λ (n_n_2 : mynat) (n_ih : add (add n_n (mul n_n n_n_1)) n_n_2 = add n_n_2 (add n_n (mul n_n n_n_1))), eq.rec n_ih (eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_2) = add (succ n_n_2) (add n_n (mul n_n n_n_1)))) (eq.rec (eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_2) = add (succ n_n_2) (add n_n (mul n_n n_n_1)))) (mynat.rec (eq.refl (succ n_n_2)) (λ (n_n : mynat) (n_ih : add (succ n_n_2) n_n = succ (add n_n_2 n_n)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n_2) n_n) = succ (succ (add n_n_2 n_n)))) (eq.rec (eq.refl (succ (add (succ n_n_2) n_n) = succ (succ (add n_n_2 n_n)))) (propext {mp := λ (h : succ (add (succ n_n_2) n_n) = succ (succ (add n_n_2 n_n))), eq.rec (λ (h11 : succ (add (succ n_n_2) n_n) = succ (add (succ n_n_2) n_n)) (a : add (succ n_n_2) n_n = add (succ n_n_2) n_n → add (succ n_n_2) n_n = succ (add n_n_2 n_n)), a (eq.refl (add (succ n_n_2) n_n))) h h (λ (n_eq : add (succ n_n_2) n_n = succ (add n_n_2 n_n)), n_eq), mpr := λ (a : add (succ n_n_2) n_n = succ (add n_n_2 n_n)), eq.rec (eq.refl (succ (add (succ n_n_2) n_n))) a})))) (add n_n (mul n_n n_n_1)))) (propext {mp := λ (h : succ (add (add n_n (mul n_n n_n_1)) n_n_2) = succ (add n_n_2 (add n_n (mul n_n n_n_1)))), eq.rec (λ (h11 : succ (add (add n_n (mul n_n n_n_1)) n_n_2) = succ (add (add n_n (mul n_n n_n_1)) n_n_2)) (a : add (add n_n (mul n_n n_n_1)) n_n_2 = add (add n_n (mul n_n n_n_1)) n_n_2 → add (add n_n (mul n_n n_n_1)) n_n_2 = add n_n_2 (add n_n (mul n_n n_n_1))), a (eq.refl (add (add n_n (mul n_n n_n_1)) n_n_2))) h h (λ (n_eq : add (add n_n (mul n_n n_n_1)) n_n_2 = add n_n_2 (add n_n (mul n_n n_n_1))), n_eq), mpr := λ (a : add (add n_n (mul n_n n_n_1)) n_n_2 = add n_n_2 (add n_n (mul n_n n_n_1))), eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_2))) a})))) n_n_1) (eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_1) = add (succ n_n_1) (add n_n (mul n_n n_n_1)))) (eq.rec (eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_1) = add (succ n_n_1) (add n_n (mul n_n n_n_1)))) (mynat.rec (eq.refl (succ n_n_1)) (λ (n_n : mynat) (n_ih : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n)))) (eq.rec (eq.refl (succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n)))) (propext {mp := λ (h : succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n))), eq.rec (λ (h11 : succ (add (succ n_n_1) n_n) = succ (add (succ n_n_1) n_n)) (a : add (succ n_n_1) n_n = add (succ n_n_1) n_n → add (succ n_n_1) n_n = succ (add n_n_1 n_n)), a (eq.refl (add (succ n_n_1) n_n))) h h (λ (n_eq : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), n_eq), mpr := λ (a : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), eq.rec (eq.refl (succ (add (succ n_n_1) n_n))) a})))) (add n_n (mul n_n n_n_1)))) (propext {mp := λ (h : succ (add (add n_n (mul n_n n_n_1)) n_n_1) = succ (add n_n_1 (add n_n (mul n_n n_n_1)))), eq.rec (λ (h11 : succ (add (add n_n (mul n_n n_n_1)) n_n_1) = succ (add (add n_n (mul n_n n_n_1)) n_n_1)) (a : add (add n_n (mul n_n n_n_1)) n_n_1 = add (add n_n (mul n_n n_n_1)) n_n_1 → add (add n_n (mul n_n n_n_1)) n_n_1 = add n_n_1 (add n_n (mul n_n n_n_1))), a (eq.refl (add (add n_n (mul n_n n_n_1)) n_n_1))) h h (λ (n_eq : add (add n_n (mul n_n n_n_1)) n_n_1 = add n_n_1 (add n_n (mul n_n n_n_1))), n_eq), mpr := λ (a : add (add n_n (mul n_n n_n_1)) n_n_1 = add n_n_1 (add n_n (mul n_n n_n_1))), eq.rec (eq.refl (succ (add (add n_n (mul n_n n_n_1)) n_n_1))) a}))))) (mynat.rec (eq.refl (succ n_n_1)) (λ (n_n : mynat) (n_ih : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n)))) (eq.rec (eq.refl (succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n)))) (propext {mp := λ (h : succ (add (succ n_n_1) n_n) = succ (succ (add n_n_1 n_n))), eq.rec (λ (h11 : succ (add (succ n_n_1) n_n) = succ (add (succ n_n_1) n_n)) (a : add (succ n_n_1) n_n = add (succ n_n_1) n_n → add (succ n_n_1) n_n = succ (add n_n_1 n_n)), a (eq.refl (add (succ n_n_1) n_n))) h h (λ (n_eq : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), n_eq), mpr := λ (a : add (succ n_n_1) n_n = succ (add n_n_1 n_n)), eq.rec (eq.refl (succ (add (succ n_n_1) n_n))) a})))) (add n_n (mul n_n n_n_1))))) (eq.rec (eq.refl (eq (add (succ n_n) (mul (succ n_n) n_n_1)))) (eq.rec (eq.rec (eq.refl (add (succ n_n) (mul (succ n_n) n_n_1))) (eq.rec (eq.refl (add (succ n_n) (mul (succ n_n) n_n_1))) (eq.rec n_ih (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (mul n_n n_n_1 = add zero (mul n_n n_n_1))) (eq.rec (eq.rec (eq.refl (mul n_n n_n_1 = add zero (mul n_n n_n_1))) (eq.rec (eq.refl (add zero (mul n_n n_n_1))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul n_n n_n_1)))) (propext {mp := λ (hl : mul n_n n_n_1 = mul n_n n_n_1), true.intro, mpr := λ (hr : true), eq.refl (mul n_n n_n_1)})))) (λ (n_n_2 : mynat) (n_ih : add (mul n_n n_n_1) n_n_2 = add n_n_2 (mul n_n n_n_1)), eq.rec n_ih (eq.rec (eq.refl (succ (add (mul n_n n_n_1) n_n_2) = add (succ n_n_2) (mul n_n n_n_1))) (eq.rec (eq.rec (eq.refl (succ (add (mul n_n n_n_1) n_n_2) = add (succ n_n_2) (mul n_n n_n_1))) (mynat.rec (eq.refl (succ n_n_2)) (λ (n_n : mynat) (n_ih : add (succ n_n_2) n_n = succ (add n_n_2 n_n)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n_2) n_n) = succ (succ (add n_n_2 n_n)))) (eq.rec (eq.refl (succ (add (succ n_n_2) n_n) = succ (succ (add n_n_2 n_n)))) (propext {mp := λ (h : succ (add (succ n_n_2) n_n) = succ (succ (add n_n_2 n_n))), eq.rec (λ (h11 : succ (add (succ n_n_2) n_n) = succ (add (succ n_n_2) n_n)) (a : add (succ n_n_2) n_n = add (succ n_n_2) n_n → add (succ n_n_2) n_n = succ (add n_n_2 n_n)), a (eq.refl (add (succ n_n_2) n_n))) h h (λ (n_eq : add (succ n_n_2) n_n = succ (add n_n_2 n_n)), n_eq), mpr := λ (a : add (succ n_n_2) n_n = succ (add n_n_2 n_n)), eq.rec (eq.refl (succ (add (succ n_n_2) n_n))) a})))) (mul n_n n_n_1))) (propext {mp := λ (h : succ (add (mul n_n n_n_1) n_n_2) = succ (add n_n_2 (mul n_n n_n_1))), eq.rec (λ (h11 : succ (add (mul n_n n_n_1) n_n_2) = succ (add (mul n_n n_n_1) n_n_2)) (a : add (mul n_n n_n_1) n_n_2 = add (mul n_n n_n_1) n_n_2 → add (mul n_n n_n_1) n_n_2 = add n_n_2 (mul n_n n_n_1)), a (eq.refl (add (mul n_n n_n_1) n_n_2))) h h (λ (n_eq : add (mul n_n n_n_1) n_n_2 = add n_n_2 (mul n_n n_n_1)), n_eq), mpr := λ (a : add (mul n_n n_n_1) n_n_2 = add n_n_2 (mul n_n n_n_1)), eq.rec (eq.refl (succ (add (mul n_n n_n_1) n_n_2))) a})))) n_n_1)))) (mynat.rec (eq.refl (succ n_n)) (λ (n_n_1 : mynat) (n_ih : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), eq.rec n_ih (eq.rec (eq.refl (succ (add (succ n_n) n_n_1) = succ (succ (add n_n n_n_1)))) (eq.rec (eq.refl (succ (add (succ n_n) n_n_1) = succ (succ (add n_n n_n_1)))) (propext {mp := λ (h : succ (add (succ n_n) n_n_1) = succ (succ (add n_n n_n_1))), eq.rec (λ (h11 : succ (add (succ n_n) n_n_1) = succ (add (succ n_n) n_n_1)) (a : add (succ n_n) n_n_1 = add (succ n_n) n_n_1 → add (succ n_n) n_n_1 = succ (add n_n n_n_1)), a (eq.refl (add (succ n_n) n_n_1))) h h (λ (n_eq : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), n_eq), mpr := λ (a : add (succ n_n) n_n_1 = succ (add n_n n_n_1)), eq.rec (eq.refl (succ (add (succ n_n) n_n_1))) a})))) (add n_n_1 (mul n_n n_n_1)))))) (propext {mp := λ (h : succ (add n_n (add n_n_1 (mul n_n n_n_1))) = succ (add n_n_1 (add n_n (mul n_n n_n_1)))), eq.rec (λ (h11 : succ (add n_n (add n_n_1 (mul n_n n_n_1))) = succ (add n_n (add n_n_1 (mul n_n n_n_1)))) (a : add n_n (add n_n_1 (mul n_n n_n_1)) = add n_n (add n_n_1 (mul n_n n_n_1)) → add n_n (add n_n_1 (mul n_n n_n_1)) = add n_n_1 (add n_n (mul n_n n_n_1))), a (eq.refl (add n_n (add n_n_1 (mul n_n n_n_1))))) h h (λ (n_eq : add n_n (add n_n_1 (mul n_n n_n_1)) = add n_n_1 (add n_n (mul n_n n_n_1))), n_eq), mpr := λ (a : add n_n (add n_n_1 (mul n_n n_n_1)) = add n_n_1 (add n_n (mul n_n n_n_1))), eq.rec (eq.refl (succ (add n_n (add n_n_1 (mul n_n n_n_1))))) a})))) m) (mynat.rec (eq.rec true.intro (eq.rec (eq.refl (mul n_n m = add zero (mul n_n m))) (eq.rec (eq.rec (eq.refl (mul n_n m = add zero (mul n_n m))) (eq.rec (eq.refl (add zero (mul n_n m))) (mynat.rec (eq.refl zero) (λ (m_n : mynat) (m_ih : add zero m_n = m_n), eq.rec m_ih (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (eq.rec (eq.refl (succ (add zero m_n) = succ m_n)) (propext {mp := λ (h : succ (add zero m_n) = succ m_n), eq.rec (λ (h11 : succ (add zero m_n) = succ (add zero m_n)) (a : add zero m_n = add zero m_n → add zero m_n = m_n), a (eq.refl (add zero m_n))) h h (λ (n_eq : add zero m_n = m_n), n_eq), mpr := λ (a : add zero m_n = m_n), eq.rec (eq.refl (succ (add zero m_n))) a})))) (mul n_n m)))) (propext {mp := λ (hl : mul n_n m = mul n_n m), true.intro, mpr := λ (hr : true), eq.refl (mul n_n m)})))) (λ (n_n_1 : mynat) (n_ih : add (mul n_n m) n_n_1 = add n_n_1 (mul n_n m)), eq.rec n_ih (eq.rec (eq.refl (succ … = add (succ n_n_1) (mul n_n m))) …)) m))) …) …))) n
